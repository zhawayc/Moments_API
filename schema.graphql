scalar GraphQLDate

type User {
    _id: ID!
    username: String
    password: String
}

type Story {
    _id: ID!
    userId: ID!
    username: String
    title: String!
    content: String!
    created: GraphQLDate!
    like: Int
}

type StoriesWithPage {
    stories: [Story]
    page: Int!
}

input inputStory {
    _id: String,
    userId: String!,
    title: String!
    content: String!
}

type Query {
    about: String!
    getStoriesByUserId(userId: String!, page: Int!): StoriesWithPage
    getStories(page: Int!): StoriesWithPage
    getStoryById(_id: String!): Story
}

type Mutation {
    createStory(story: inputStory!): Story
    updateStory(story: inputStory!): Story
    deleteStory(_id: String!): Boolean
    likeStory(_id: ID!, userId: ID!): Boolean
}
